name: Release

on:
  push:
    branches: [main, beta]
  pull_request:
    types: [closed] # Executa quando um PR é fechado (merged)
permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Garante que todos os commits sejam buscados
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Lint Commits
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        run: |
          # Verifica se o PR foi mesclado e valida os commits dentro dele
          npx commitlint --from=${{ github.event.pull_request.base.sha }} --to=${{ github.event.pull_request.merge_commit_sha }} --verbose

      - name: Run ESLint
        run: |
          # Executa o ESLint no código-fonte para validar as regras
          npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings 0
        continue-on-error: false # Faz o workflow falhar se houver erros de linting

      - name: Extract PR Information
        id: pr_info
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        run: |
          # Extrai o título do PR e converte para formato compatível com Conventional Commits
          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | sed 's/^[a-z]*\(:\s*\)\?//I')
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "PR_TYPE=$(echo "${{ github.event.pull_request.title }}" | grep -oE '^(feat|fix|chore|docs|style|refactor|perf|test)')" >> $GITHUB_ENV

      - name: Prepare Semantic Release
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
        run: |
          # Simula um commit com base no título do PR
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit --allow-empty -m "${{ env.PR_TYPE }}: ${{ env.PR_TITLE }}" || true

      - name: Run Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
